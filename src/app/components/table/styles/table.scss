.mat-table {
  width: 100%;
}

.mat-table ::ng-deep .nested-table-column {
  padding: 0;
}

:host ::ng-deep .table-filter {
  background-color: var(--ene-color-grey-50);
  margin-bottom: 1rem;
  width: 100%;

  // TODO(bobkov): Design inconsistence
  ::ng-deep &.mat-form-field {
    &.mat-form-field-appearance-legacy {
      .mat-form-field-infix {
        padding: 0.5rem;
      }

      &.mat-form-field-can-float {
        &.mat-form-field-should-float .mat-form-field-label,
        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {
          transform: translate3d(0, -1rem, 0.001px) scale(0.75) perspective(100px);
        }
      }
    }
  }
}

:host ::ng-deep .mat-paginator.table-paginator {
  &.compact {
    .mat-paginator-range-actions {
      width: 100%;

      .mat-paginator-range-label {
        flex: 1;
      }
    }
  }

  .mat-paginator-container {
    flex-wrap: wrap;
    min-height: 2.5rem;
    padding: 0;

    .mat-paginator-page-size {
      align-items: center;

      .mat-paginator-page-size-label {
        margin: 0 1rem 0 0;
      }

      .mat-paginator-page-size-select {
        height: 2rem;
        margin: 0;
      }

      .mat-form-field-infix {
        background-color: var(--ene-color-grey-50);
        border-top: 0;
        padding-left: 0.5rem;
        padding-right: 0.5rem;
      }
    }

    .mat-paginator-range-actions {
      .mat-paginator-range-label {
        margin: 0 1rem;
      }
    }
  }
}

/** Optional cells styles */
.centered {
  text-align: center;
}

.start {
  text-align: start;
}

.end {
  text-align: end;
}

.bold {
  font-weight: 700;
}

.border-left {
  border-left: 2px solid var(--ene-color-grey-100);
}

.border-right {
  border-right: 2px solid var(--ene-color-grey-100);
}

/** Colors options that can be attached to cells */
.mat-cell {
  &.primary {
    color: var(--ene-color-primary-600);
  }

  &.secondary {
    color: var(--ene-color-secondary-500);
  }

  &.success {
    color: var(--ene-color-success-100);
  }

  &.grey {
    color: var(--ene-color-grey-500);
  }
}

/** Type related styles */
:host {
  .select-cell {
    min-width: 2rem;
    max-width: 2rem;

    .mat-checkbox {
      &:not(.mat-checkbox-disabled) ::ng-deep .mat-checkbox-frame {
        border-color: var(--ene-color-grey-600);
      }

      ::ng-deep .mat-checkbox-frame {
        border-width: 1px;
      }
    }

    .mat-checkbox ::ng-deep .mat-checkbox-inner-container {
      width: 1rem;
      height: 1rem;
    }
  }

  &[large] {
    .select-cell {
      min-width: 2.5rem;
      max-width: 2.5rem;

      .mat-checkbox ::ng-deep .mat-checkbox-inner-container {
        width: 1.5rem;
        height: 1.5rem;
      }
    }
  }
}

.action-cell {
  min-width: 2rem !important;

  &-icon::before {
    width: 1rem;
    height: 1rem;
    margin: 0;
  }
}

.image-cell {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 2rem !important;

  &-img img {
    height: 1rem;
    width: 1rem;
  }
}

.value-cell {
  text-align: end;
}

.list-cell .textual-cell {
  white-space: pre-line !important;
}

.action-cell {
  justify-content: center;
}

.action-cell-icon {
  cursor: pointer;
}

.state-cell {
  justify-content: center;
}

// TODO(bokbov): Find place where it should be
:host ::ng-deep .state-cell-dot {
  display: block;
  width: 0.8rem;
  height: 0.8rem;
  border-radius: 50%;

  &.notQualifiedForDiscountAfterReview,
  &.discountNotPossible,
  &.notPossibleForDiscount {
    background-color: var(--ene-color-error-100);
  }

  &.qualifiedForDiscount,
  &.qualifiedForDiscountAfterReview {
    background-color: var(--ene-color-success-300);
  }

  &.notQualifiedForDiscount,
  &.possibleForDiscount,
  &.unknown {
    background-color: var(--ene-color-blue-300);
  }

  &.inReview {
    background-color: var(--ene-color-sand-400);
  }

  &.planning {
    background-color: var(--ene-color-sand-100);
  }

  &.idea {
    background-color: var(--ene-color-blue-200);
  }

  &.projectPlanning {
    background-color: var(--ene-color-green-300);
  }

  &.resupplied {
    background-color: var(--ene-color-success-100);
  }

  &.failed {
    background-color: var(--ene-color-error-300);
  }
}

.badge-cell {
  color: var(--ene-color-white);
  text-transform: uppercase;
  font-size: 0.75rem;
  line-height: 1.2;
  font-weight: 600;
  border-radius: 2px;
  padding: 0.25rem;

  &-icon {
    align-items: center;
    justify-content: center;
    display: flex;
    box-sizing: border-box;
    padding: 0;
    background: var(--ene-color-grey-50);
    margin-left: 0.5rem;
    width: 1.6rem;
    height: 1.6rem;

    border-radius: 1px;

    &.warning {
      color: var(--ene-color-error-300);
    }

    &.info {
      color: var(--ene-color-emerald-300);
    }
  }

  &.notQualifiedForDiscountAfterReview,
  &.discountNotPossible {
    background-color: var(--ene-color-error-100);
  }

  &.qualifiedForDiscount,
  &.qualifiedForDiscountAfterReview {
    background-color: var(--ene-color-success-300);
  }

  &.notQualifiedForDiscount,
  &.unknown {
    background-color: var(--ene-color-blue-300);
  }

  &.inReview {
    background-color: var(--ene-color-sand-400);
  }
}
